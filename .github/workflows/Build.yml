name: CI/CD Convey Production

on:
  schedule:
    - cron: "0 6 * * *"
  repository_dispatch:
    types: build-static-production

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Virtual envs : https://help.github.com/en/articles/virtual-environments-for-github-actions
        os: [ubuntu-latest]
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn cache
        uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ matrix.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ matrix.os }}-yarn-

      - name: yarn install, build, and test
        env:
          CI: "true"
          FAUNADB_TOKEN: ${{ secrets.FAUNADB_TOKEN_READONLY_PRODUCTION }}
        run: |
          yarn install
          yarn start

      - name: deploy
        uses: mikeal/npx@master
        env:
          VERCEL_ORG_ID: ${{ secrets.ZEIT_ORGID_AUGORA }}
          VERCEL_PROJECT_ID: ${{ secrets.ZEIT_PROJECTID_CONVEY }}
          ZEIT_TOKEN: ${{ secrets.ZEIT_TOKEN }}
        with:
          args: "npx now --token=$ZEIT_TOKEN --prod"

      - uses: 8398a7/action-slack@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
        with:
          status: custom
          fields: workflow,job,commit
          custom_payload: |
            {
              username: 'Github Actions',
              icon_emoji: ':rocket:',
              attachments: [
                {
                  color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": `${process.env.AS_WORKFLOW} (${process.env.AS_COMMIT})`
                      }
                    },
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": '${{ job.status }}' === 'success' ? "Convey deployment succeeded!" : "Convey deployment failed..."
                      }
                    },
                    {
                      "type": "context",
                      "elements": [
                        {
                          "type": "mrkdwn",
                          "text": "From GitHub Actions with :heart:"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
